<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"></script>

{% style %}
  .collection {
    grid-template-columns: repeat(auto-fit, minmax(200px, 320px));
    gap: 20px;

    @media only screen and (max-width: 500px) {
      grid-template-columns: repeat(auto-fit, minmax(150px, 200px));
    }
  }

  .card {
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
  }

  .collection-poster {
    background-image: url("{{ 'collections.jpg' | file_img_url: 'master' }}");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
  }

  .overlay {
    opacity: 0;
    transition: all ease-in-out 0.3s;
    z-index: -1;
  }

  .card-container:hover .overlay {
    opacity: 1;
    z-index: 1;
  }

  .rotate-180 {
    transform: rotate(180deg);
    transition: transform 0.3s;
  }

  .rotate-90 {
    transform: rotate(-90deg);
    transition: transform 0.3s;

    @media only screen and (max-width: 600px) {
      transform: rotate(-180deg);
    }
  }

  #load-more {
    text-align: center;
    display: block;
    margin: 40px auto;
    padding: 10px 20px;
    background-color: #fff;
    color: black;
    border: 2px solid #000;
    cursor: pointer;
  }

  #load-more:hover {
    background-color: #000;
    color: #fff;
  }

  .load-more_spinner {
    display: none;
    width: 35px;
    height: 35px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #3a3a3a;
    border-radius: 50%;
    margin: 30px auto;
    animation: 0.5s spin linear infinite;
  }
  @keyframes spin {
    0% {
      transform: rotate(0deg)
    }
    100% {
      transform: rotate(360deg)
    }
  }
{% endstyle %}

<div class="collection" x-data="{showFilters: false}">

  <div class="cwidth flex flex-col md:flex-row justify-start mx-auto items-center gap-8 !my-16">
    <h1 class="text-3xl font-bold w-[90%] md:w-[30%]">
      Explore Our<br/> {{ collection.title }} Collections
    </h1>
    <p class="text-lg w-[90%] md:w-[50%]">
      {{ collection.description | strip_html }}
    </p>
  </div>

  {% if section.settings.show_subcollections %}
    <div class="subcollections cwidth">
      <div class="w-full">
        <div class="mobile-subcollection">
          <swiper-container class="mySwiper" init="false">
            {% for collection in section.settings.subcollections limit: section.settings.products_per_page %}
              <swiper-slide>
                {% render "subcollection"
                  , collection: collection %}
              </swiper-slide>
            {% endfor %}
          </swiper-container>
        </div>
      </div>
    </div>
  {% endif %}

  <div class="cwidth !mb-8 !mt-8 py-4 border-y border-solid border-[#D1D5DB] flex justify-between items-center">
    <!-- Filter button -->
    <div class="relative h-[25px] w-[120px] md:w-[150px] flex justify-start items-center cursor-pointer" @click="showFilters = !showFilters">
      <button class="font-bold absolute">Show Filters</button>
      <div class="absolute right-[5px]" :class="{ 'rotate-90': showFilters }">
        {% render "icon-down" %}
      </div>
    </div>

    <!-- Sorting dropdown -->
    <div class="flex md:items-center gap-4 flex-col md:flex-row items-start">
      <p class="font-bold text-[15px] md:text-[16px]">Sort By</p>
      <div class="relative w-[150px] mb-[10px] md:mb-0 flex gap-2 justify-start items-center">
        <select id="sort-by" class="w-full appearance-none absolute font-bold text-[#4B5563] outline-none">

          {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

          {% for option in collection.sort_options %}
            {% if option.name != "Featured" %}
              <option
                value="{{ option.value }}"
                {% if option.value == sort_by %}
                selected="selected"
                {% endif %}>
                {{ option.name }}
              </option>
            {% endif %}
          {% endfor %}
        </select>

        <div class="absolute right-[5px]">
          {% render "icon-down" %}
        </div>
      </div>
    </div>
  </div>

  <div class="cwidth cards my-8 w-full mx-auto flex flex-col items-center justify-center">
    {% paginate collection.products by 2 %}
      <div class="flex flex-col md:flex-row gap-16 justify-between items-start w-full my-4">
        <div
          class="w-[90%] md:w-[30%]"
          x-cloak
          x-show="showFilters">
          {% render "filter"
            , collection_new: collection %}
        </div>

        <div class="w-full">
          <div data-next-url="{{paginate.next.url}}" class="products justify-center md:justify-start collection grid gap-8">
            {% for product in collection.products %}
              {% assign prod_id = forloop.index | plus: paginate.current_offset %}
              <div>
                {% render "product-card"
                  , product: product %}
              </div>
            {% else %}
              <p>No products found.</p>
            {% endfor %}
          </div>
          <div class="load-more mx-auto">
            <button class="btn" id="load-more">Load More</button>
            <div class="load-more_spinner"></div>
          </div>
        </div>
      </div>
    {% endpaginate %}
  </div>
</div>

{% schema %}
  {
    "name": "Collection Bedroom",
    "settings": [
      {
        "type": "checkbox",
        "id": "show_subcollections",
        "label": "Check this to show subcollections",
        "default": false
      }, {
        "type": "collection_list",
        "id": "subcollections",
        "label": "Add your Subcollections here"
      }, {
        "type": "range",
        "id": "products_per_page",
        "label": "Products per page",
        "min": 1,
        "max": 10,
        "step": 1,
        "default": 4
      }
    ]
  }
{% endschema %}

<script>
    const swiperEl = document.querySelector('swiper-container')
  
    const params = {
      injectStyles: [`
      .swiper-pagination{
        display: flex;
        justify-content: flex-end;
      }
  
      .swiper-pagination-bullet {
        width: 20px;
        height: 20px;
        text-align: center;
        line-height: 20px;
        font-size: 18px;
        color: #000;
        background: transparent;
        opacity: 1;
      }
  
      .swiper-pagination-bullet-active {
        color: #777;
      }
      `],
      // change slidesperview based on window size
      breakpoints: {
        640: {
          slidesPerView: 1,
          spaceBetween: 20,
        },
        768: {
          slidesPerView: 2,
          spaceBetween: 20,
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 20,
        },
      },
      pagination: {
        clickable: true,
        renderBullet: function (index, className) {
          // prepend 0 to index if less than 10
          index = index + 1;
          if (index < 10) {
            index = '0' + index;
          }
          return '<span class="' + className + '">' + (index) + "</span>";
        },
      },
    }
  
    Object.assign(swiperEl, params)
  
    swiperEl.initialize();
</script>

<script>
    // filter dropdown
    Shopify.queryParams = {};
    
    // Preserve existing query parameters
    if (location.search.length) {
      var params = location.search.substr(1).split('&');
    
      for (var i = 0; i < params.length; i++) {
        var keyValue = params[i].split('=');
    
        if (keyValue.length) {
          Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
        }
      }
    }
    
    // Update sort_by query parameter on select change
    document.querySelector('#sort-by').addEventListener('change', function(e) {
      var value = e.target.value;
    
      Shopify.queryParams.sort_by = value;
      location.search = new URLSearchParams(Shopify.queryParams).toString();
    });
</script>